# -*- coding: utf-8 -*-
"""main.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hF3j8Pz4OzBxBW0zMobkjUGILIzCnMtA
"""

!pip install diffusers transformers accelerate scipy safetensors huggingface_hub

from huggingface_hub import login

# Paste your token here
login("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")

from diffusers import StableDiffusionPipeline
import torch

pipe = StableDiffusionPipeline.from_pretrained(
    "runwayml/stable-diffusion-v1-5",
    torch_dtype=torch.float16
).to("cuda")  # Use GPU

from diffusers import StableDiffusionPipeline
import torch

# Check if CUDA is available before moving the model to GPU
if torch.cuda.is_available():
    pipe = StableDiffusionPipeline.from_pretrained(
        "runwayml/stable-diffusion-v1-5",
        torch_dtype=torch.float16
    ).to("cuda")  # Use GPU if available
else:
    print("CUDA is not available. Using CPU instead.")
    pipe = StableDiffusionPipeline.from_pretrained(
        "runwayml/stable-diffusion-v1-5",
        torch_dtype=torch.float16
    )  # Use CPU as fallback

import torch
torch.cuda.is_available()

prompt = "A futuristic city floating in the sky, digital art style"
image = pipe(prompt).images[0]

# Display the image
image.show()

image.save("futuristic_city.png")

while True:
    prompt = input("Enter your image prompt (or 'exit' to stop): ")
    if prompt.lower() == "exit":
        break
    image = pipe(prompt).images[0]
    image.show()

while True:
    prompt = input("Enter your image prompt (or 'exit' to stop): ")
    if prompt.lower() == "exit":
        break
    image = pipe(prompt).images[0]
    image.show()
from IPython.display import display
display(image)

!pip install gradio
import gradio as gr

def generate_art(prompt):
    image = pipe(prompt).images[0]
    return image

gr.Interface(fn=generate_art, inputs="text", outputs="image", title="AI Art Generator").launch()